#!/bin/bash
pu="${b}\033[1;30m"
neon="\033[0m"
neo="$b\033[1;37m"
z="${b}\033[1;31m"
ty="${b}\033[31m"
U="${b}\033[1;34m"
g1="${b}\033[34m"
groot="${b}\e[1;36m"
gro="${b}\e[36m"
h="${b}\033[1;32m"
v2="${b}\033[32m"
k="$b\033[1;35m"
b23="$b\033[35m"
l="$b\033[1;33m"
Gruu="$b\033[33m"
Bru="$b\033[38;2;23;147;209m"

#Colores Seleccionados

#COLORES SOLIDOS

negro="\e[1;30m"
azul="\e[1;34m"
verde="\e[1;32m"
cian="\e[1;36m"
l="\e[1;31m"
a="\e[1;35m"
blanco="\e[1;37m"

#COLORES BAJOS

black="\e[0;30m"
blue="\e[0;34m"
green="\e[0;32m"
cyan="\e[0;36m"
red="\e[0;31m"
pur="\e[0;35m"
yellow="\e[0;33m"
gris="\e[0;37m"
cafe="\e[0;33m"
grise="\033[1;90m"

progreSh() {
    LR='\033[1;31m'
    LG='\033[1;32m'
    LY='\033[1;33m'
    LC='\033[1;36m'
    LW='\033[1;37m'
    NC='\033[0m'
    if [ "${1}" = "0" ]; then TME=$(date +"%s"); fi
    SEC=`printf "%04d\n" $(($(date +"%s")-${TME}))`; SEC="$SEC sec"
    PRC=`printf "%.0f" ${1}`
    SHW=`printf "%3d\n" ${PRC}`
    LNE=`printf "%.0f" $((${PRC}/2))`
    LRR=`printf "%.0f" $((${PRC}/2-12))`; if [ ${LRR} -le 0 ]; then LRR=0; fi;
    LYY=`printf "%.0f" $((${PRC}/2-24))`; if [ ${LYY} -le 0 ]; then LYY=0; fi;
    LCC=`printf "%.0f" $((${PRC}/2-36))`; if [ ${LCC} -le 0 ]; then LCC=0; fi;
    LGG=`printf "%.0f" $((${PRC}/2-48))`; if [ ${LGG} -le 0 ]; then LGG=0; fi;
    LRR_=""
    LYY_=""
    LCC_=""
    LGG_=""
    for ((i=1;i<=13;i++))
    do
    	DOTS=""; for ((ii=${i};ii<13;ii++)); do DOTS="${DOTS}."; done
    	if [ ${i} -le ${LNE} ]; then LRR_="${LRR_}#"; else LRR_="${LRR_}."; fi
    	echo -ne "  ${LW}${SEC}  ${LR}${LRR_}${DOTS}${LY}............${LC}............${LG}............ ${SHW}%${NC}\r"
    	if [ ${LNE} -ge 1 ]; then sleep .05; fi
    done
    for ((i=14;i<=25;i++))
    do
    	DOTS=""; for ((ii=${i};ii<25;ii++)); do DOTS="${DOTS}."; done
    	if [ ${i} -le ${LNE} ]; then LYY_="${LYY_}#"; else LYY_="${LYY_}."; fi
    	echo -ne "  ${LW}${SEC}  ${LR}${LRR_}${LY}${LYY_}${DOTS}${LC}............${LG}............ ${SHW}%${NC}\r"
    	if [ ${LNE} -ge 14 ]; then sleep .05; fi
    done
    for ((i=26;i<=37;i++))
    do
    	DOTS=""; for ((ii=${i};ii<37;ii++)); do DOTS="${DOTS}."; done
    	if [ ${i} -le ${LNE} ]; then LCC_="${LCC_}#"; else LCC_="${LCC_}."; fi
    	echo -ne "  ${LW}${SEC}  ${LR}${LRR_}${LY}${LYY_}${LC}${LCC_}${DOTS}${LG}............ ${SHW}%${NC}\r"
    	if [ ${LNE} -ge 26 ]; then sleep .05; fi
    done
    for ((i=38;i<=49;i++))
    do
    	DOTS=""; for ((ii=${i};ii<49;ii++)); do DOTS="${DOTS}."; done
    	if [ ${i} -le ${LNE} ]; then LGG_="${LGG_}#"; else LGG_="${LGG_}."; fi
    	echo -ne "  ${LW}${SEC}  ${LR}${LRR_}${LY}${LYY_}${LC}${LCC_}${LG}${LGG_}${DOTS} ${SHW}%${NC}\r"
    	if [ ${LNE} -ge 38 ]; then sleep .05; fi
    done
}

printf "\n\n\n\n\n\n\n\n\n\n"
progreSh 0
progreSh 10
progreSh 20
progreSh 30
progreSh 40
progreSh 50
progreSh 60
progreSh 70
progreSh 80
progreSh 90
progreSh 100
printf "\n\n\n\n\n\n\n\n\n\n"



trap Bay INT
function Bay() {
echo
sleep 0.2
printf "$Bru [$l+$k]${groot} ∆Saliendo.\n"
printf "$Bru [$l+$k]${groot} lpk.$u\n "
echo
sleep 0.4
exit
}
case $(command -v python2) in
"")
pk="$(ping -c 1 -q www.google.com >&/dev/null; echo $?)"
case $pk in
0)
;;
*)                                                                                    
echo -e "\n$U[∆]$gro witget$b23 No Hay Conexion Compañero\n$b23"
exit
esac
clear
echo -e "$k lpk™ Herramienta Witget [∆]™ "
echo
sleep 0.6
printf "${h}Descargando Dependencias ..!$z\n"
pkg install -y python2
source 'Widget2_lpk'
exit
esac


b1() {
clear
sleep 0.9
k1
}


h1() {
clear
printf  "

$pur
	╦ ╦┬┌┬┐┌─┐┌─┐┌┬┐  ╔═╗┌┐┌┌─┐  ╔═╗┬┌┐┌┌┬┐  ╔╦╗┌─┐┌─┐┬ ┬┬┌─
	║║║│ │││ ┬├┤  │   ║ ║│││├┤   ╠╣ ││││ ││   ║║├┤ ├─┤├─┤├┴┐
	╚╩╝┴─┴┘└─┘└─┘ ┴   ╚═╝┘└┘└─┘  ╚  ┴┘└┘─┴┘  ═╩╝└─┘┴ ┴┴ ┴┴ ┴
$red		  ▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓ 
		  ▓╫─▄▀────────────▄▀───────────▄▀─╫▓ 
		  ▓╫─▀▄───────────▐█────────────▀▄─╫▓ 
		  ▓╫─▄▌▄───────────▀▄───────────▄▌▄╫▓ 
		  ▓▄▀░▓░▀▄──────────▌─────────▄▀░▓░▀▓ 
		  ▓░░░░░░░▌──────▄▄▀▀▄▄──────▐▓░░░░░▓ 
$green		  ▓▓░░░░░▓▀────▄▀░░▓▓░░▀▄────▀▄░░░░░▓ 
		  ▓╫▓█▓█▓─────▐▓░░░░░░░░▓▌─────▓█▓█▓▓ 
		  ▓╫▐░░░▌─────██▀▀▀▀▀▀▀▀██─────▐░░░╫▓ 
		  ▓╫▐░█░▌───▄▄████████████▄▄───▐░█░╫▓ 
		  ▓╫▐░░░▌───▐▓▓▓▌▐▒▓▓▒▌▐▓▓▓▌───▐░░░╫▓ 
		  ▓╫▐░█░▌───▐▓▓▓▌▐▓▒▒▓▌▐▓▓▓▌───▐░█░╫▓ 
$cyan		  ▓╫▐░░░▌▄▄▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀█▄▐░░░╫▓ 
		  ▓╫▐░█░███▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓███░█░╫▓ 
		  ▓╫▐░░░▌░█▒▒▒▒▒▒▒▒▒▓▒▒▒▒▒▒▒▓▒▒▐░█░╫▓ 
		  ◙═════════════════════════════════◙ 
"


setterm -foreground blue
echo -e "
		_The_Widget_lpk_Author=lpk_all_the_wordl_

"
}


ayuda() {
sleep 0.8
printf "
					$red!${yellow}Help$blue!

	$green
	Uso De Elecciones Multiples Colocas El Numero Correspondiente Y Te Guiaras
			Tras El Transcurso, !Algun Problema No Duden En 
				Decirmelo Thansk Por Su Atencion ! 
					$cyan~ lpk ~

"
sleep 2.8

printf "$pur Desea Volver Atras Dale Enter $blue ? " 
read enter
sleep 0.7
b1

}

k1() {
clear
sleep 0.6
		setterm -foreground magenta

printf  "
				   
          	       	             \u001b[38;5;12m    •\u001b[38;5;196m•\u001b[38;5;208m•\u001b[0m


		    \u001b[38;5;226m    •×\ •Cityd The: [${pu}π$red] $green lpk,,, $blue /×•\u001b[0m
                    \u001b[38;5;117\u001b[38;5;117m•┃\u001b[0m   \u001b[38;5;208m ᚓ \u001b[0m$pu ᴄ ᴀ s ᴘ ᴇ ʀ ʟ ᴘ ᴋ \u001b[38;5;208m|\u001b[0m \u001b[38;5;196mᴠ ɪ ʀ ᴛ ᴜ \u001b[38;5;208mᚓ  \u001b[0m  \u001b[38;5;117m┃•\u001b[0m		
	            
$green _    _  __  ___    __  ___  ____           ___   __  _  _  ___        $purple[$yellow.Start$blue]
$grise( \/\/ )(  )(   \  / _)(  _)(_  _)         (  _) /  \( )( )(  ,)      $red[$green.Help$cyan]
$grise \    /  )(  ) ) )( (/\ ) _)  )(     ___    ) _)( () ))()(  )  \      $cafe[$blue.Descri$red]
$blue  \/\/  (__)(___/  \__/(___) (__)   (___)  (_)   \__/ \__/ (_)\_)       $grise[$pur.Quit$l]
           
                    ${a} 𝔉𝔲𝔱𝔲𝔯𝔞𝔰𝔢 -> \u001b[38;5;197m............,.,.,........\u001b[0m				
	           
		                     \u001b[38;5;12m    •\u001b[38;5;196m•\u001b[38;5;208m•\u001b[0m                     				"
							
Comparacion

}

descripcion(){
printf "
	        		         $blue ~$yellow[${pur}Widget2_lpk $cafe]$red~
$green
		Esta Es Una Herramienta Personalizable Que le Da Un Mejor Aspecto A Su Termux
			Mejora Cursor Entre Otras  Es Recomendable Borrar El archivo motd 
				se encuentra situado en : cd..;cd usr;cd etc; 
		Solo Lo eliminan Con un rm -rf motd Thansk Por Utilizarme :D lpk~Widget 
"
sleep 2

printf "$pur Desea Volver Atras Dale Enter  $blue? " 
read enter
sleep 0.7
b1
}


function Comparacion() {
echo "                                                                          "       "                                                                          "
printf " $ty|_ $g1 >_πǫ. "
read ini


if [[ $ini == "Start" ]];then 
   Start
elif [[ $ini == "Help" ]];then 
    ayuda
elif [[ $ini == "Quit" ]];then
	sleep 2
	echo "					"
	echo -e "$red Bay${grise}~${cyan}!!"
	echo "					"
	sleep 0.9
   exit 0
elif [[ $ini == "Descri" ]];then
   descripcion

else
sleep 0.3
echo "												"
printf "			$red[${yellow}Opcion ${green}Incorrecta!$pur]			"
echo "												"
sleep 2
b1

fi

}

Start() {
printf "

$green┏━━━┓╋╋┏┓┏┓╋╋╋╋╋╋╋╋┏┓
$pur┃┏━━┛╋╋┃┃┃┃╋╋╋╋╋╋╋┏┛┗┓
$pur┃┗━━┳━━┫┃┃┃┏━━┳━┓╋┗┓┏╋━┳━━┳━━┓
$pur┃┏━━┫┏┓┃┃┃┃┃┃━┫┏┓┓╋┃┃┃┏┫┃━┫┃━┫
$pur┃┃╋╋┃┏┓┃┗┫┗┫┃━┫┃┃┃╋┃┗┫┃┃┃━┫┃━┫
$red┗┛╋╋┗┛┗┻━┻━┻━━┻┛┗┛╋┗━┻┛┗━━┻━━┛


"

printf "$red[$green Craneo $cyan $yellow 01$blue]"
sleep 0.3
echo "						"
printf "$red[$green Ghost $cyan  $yellow 02$blue]"
sleep 0.3
echo "						"
printf "$red[$green Dragon $cyan $yellow 03$blue]"
sleep 0.3
echo "						"
printf "$red[$green Decte $cyan $yellow 04$blue]"
sleep 0.3
echo "						"
printf "$red[$green Bash  $cyan  $yellow 05$blue]"
sleep 0.3
echo "					        "
printf "$red[$green Hydra $cyan $yellow 06$blue]"
sleep 0.3
echo "						"
printf "$red[$green Murcy $cyan  $yellow 07$blue]"
sleep 0.3
echo "						"
printf "$red[$green Predator $cyan $yellow 08$blue]"
sleep 0.3
echo "						"
printf "$red[$green Android $cyan $yellow 09$blue]"
sleep 0.3
echo "						"
printf "$red[$green Beef  $cyan $yellow 10$blue]"
sleep 0.3
echo "						"
printf "$red[$green ivam3 $cyan $yellow 11$blue]"
sleep 0.3
echo "						"
printf "$red[$green Arch $cyan $yellow 12$blue]"
sleep 0.3
echo  "						"
printf "$red[$green Castillo $cyan $yellow 14$blue]"
sleep 0.3
echo "						"
printf "$red[$green Quit $cyan  $yellow 15$blue]"
sleep 0.3







banner
sleep 0.9
}
banner() {
sleep 0.9
echo "										"
echo "										" 
printf " $pur|_ $blue >_πǫ. "
read banner
case $banner in
01|1)
banner=$(cat ~/widget/Banners/craneo)
;;
02|2)
banner=$(cat ~/widget/Banners/ghost)
;;
03|3)
banner=$(cat ~/widget/Banners/dragon)
;;
04|4)
banner=$(cat ~/widget/Banners/decte)
;;
05|5)
banner=$(cat ~/widget/Banners/bash)
;;
06|6)
banner=$(cat ~/widget/Banners/hydra)
;;
07|7)
banner=$(cat ~/widget/Banners/murcy)
;;
08|8)
banner=$(cat ~/widget/Banners/predator)
;;
09|9)
banner=$(cat ~/widget/Banners/android)
;;
10)
banner=$(cat ~/widget/Banners/beef)
;;
11)
banner=$(cat ~/widget/Banners/ivam3)
;;
12)
banner=$(cat ~/widget/Banners/arch)
;;
14)
banner=$(cat ~/widget/Banners/castillo)
;;
15)
case $(command -v nano) in
"")
case $(ping -c 1 -q www.google.com >&/dev/null; echo $?) in
0)
echo -e "${groot}Descargando Dependencias 🃏"
sleep 0.9
pkg install -y nano
;;
*)
	setterm -foreground magenta
printf " 

	───────────████████
$blue	──────────███▄███████
	──────────███████████
	──────────███████████
	──────────██████
	──────────█████████
	█───────███████			 ________________________________
	██────████████████		|				 |
$cyan	███──██████████──█		|COMPRUEBA TU CONEXION A INTERNET|
	███████████████			|	                         |
	███████████████			 ===≠================≠==========≠
	─█████████████
	──███████████
	────████████
$pu	─────███──██	
	─────██────█
	─────█─────█
	─────██────██

"

exit
esac
esac


		setterm -foreground cyan
echo -e "${U}Pege el banner y cuando termines das (CTRL O ) y CTRL X "
read -p "Enter Para Continuar _# "
nano .Banner
banner=$(cat .Banner)
;;
*)
echo -e " $h[-]$b23 Banner No $purAceptado!"
sleep 3
banner
color
esac
}
color() {
setterm -foreground green
h1
sleep 0.5
echo -e "${U}Elige un color ${l}Para ${cyan}El Widget : "
setterm -foreground red
printf "

$pur[${blue}1$pur]${blanco}Blanco     	              
$pur[${blue}2$pur]${red}Rojo	  
$pur[${blue}3$pur]${green}Verde	  
$pur[${blue}4$pur]${yellow}Amarillo	              
$pur[${blue}5$pur]${blue}Negro	 
$pur[${blue}6$pur]${blue}Azul	        
$pur[${blue}7$pur]${cyan}Cyan	             
$pur[${blue}8$pur]${grise}Gris	  	       
$pur[${blue}9$pur]${pur}Purpura	  
$pur[${blue}10$pur]${cafe}Cafe	  
"
printf " $U[$b23+$U]$v Widget2_lpk:  "
read color
case $color in
01|1)
Color=$blanco
;;
02|2)
Color=$red
;;
03|3)
Color=$green
;;
04|4)
Color=$yellow
;;
05|5)
Color=$black
;;
06|6)
Color=$blue
;;
07|7)
Color=$cyan
;;
08|8)
Color=$grise
;;
09|9)
Color=$pur
;;
10)
Color=$cafe
;;
*)
echo -e " $z[-]$b1 Color No Valido...!"
sleep 2
color
esac
}
setterm -foreground red 
parpadeo() {
h1
echo -ne "${U}Por ${blue}Defecto : $l $yellow[${blue}20] ${cyan}Cuantas Veces Quiere Que Parpadee Su Widget ${red}: "
read veces
}
b1
banner
color
parpadeo
if [ -e $PREFIX/etc/motd ]; then
rm $PREFIX/etc/motd
fi
if [ -e $PREFIX/etc/bash.bashrc ]; then
rm $PREFIX/etc/bash.bashrc
echo "if [ -x /data/data/com.termux/files/usr/libexec/termux/command-not-found ]; then" >> $PREFIX/etc/bash.bashrc
echo "  command_not_found_handle() {" >> $PREFIX/etc/bash.bashrc
echo '          /data/data/com.termux/files/usr/libexec/termux/command-not-found "$1"' >> $PREFIX/etc/bash.bashrc
echo "  }" >> $PREFIX/etc/bash.bashrc
echo "fi" >> $PREFIX/etc/bash.bashrc
echo >> $PREFIX/etc/bash.bashrc
echo "PS1='\\[\e[0;33m
\a┌──\a─T─I─M─E─\a──┐\033[1;90m\a┌──\a─D─A─T─E─\a───❯\033[0;37m
\a┌─[\033[0;32m \@\033[1;35m ]──[\033[0;31m \d\033[1;36m ]\033[1;34m
\a├─[\033[1;36m\w\033[0;31m]\033[1;38m
\033[0;33m└─❯\033[0;31m𝔉𝔲\033[0;36m𝔱𝔲𝔯\033[1;34m𝔞𝔰𝔢$blanco\033[0;34m[~]\033[1;45m:❯❯ $yellow  '" >> $PREFIX/etc/bash.bashrc
fi
echo "python2 ~/widget/Banner" >> $PREFIX/etc/bash.bashrc
rm Banner &>> /dev/null
echo "#!/bin/python2" >> Banner
echo "#coding=utf-8" >> Banner
echo "import os,sys,time" >> Banner
echo "def maung(n):" >> Banner
echo "    for m in n + '\n':" >> Banner
echo "        sys.stdout.write(m)" >> Banner
echo "        sys.stdout.flush()" >> Banner
echo "        time.sleep(0.001)" >> Banner
echo 'banner = """' >> Banner
printf "$Color" >> Banner
printf "$banner" >> Banner
printf '\033[0m"""\n' >> Banner
echo 'os.system("clear")' >> Banner
echo "maung(banner)" >> Banner
case $veces in
"")
veces=20
nn=1
while [ $nn -le $veces ]; do
nn=$(($nn + 1))
echo 'os.system("clear")' >> Banner
echo "print (banner)" >> Banner
done
echo "print" >> Banner
sleep 1
;;
*)
nn=1
while [ $nn -le $veces ]; do
nn=$(($nn + 1))
echo 'os.system("clear")' >> Banner
echo "print (banner)" >> Banner
done
echo "print" >> Banner
sleep 1
esac
if [ -e .Banner ]; then
rm .Banner
fi
h1
	setterm -foreground green 


exit
esac
